= Urly {<img src="https://secure.travis-ci.org/evendis/urly.png" />}[http://travis-ci.org/evendis/urly]

Urly wants to help you scrape the titles, descriptions, images, and video clips
from your favorite web pages so you can be as cool as Facebook when displaying user-submitted link
content.

NB: urly is derived from on a source project called _earl_ by {teejayvanslyke}[https://github.com/teejayvanslyke/earl].
The revamp into the urly project was done by {Paul Gallagher}[https://github.com/tardate], and master source is currently
available at https://github.com/evendis/urly.

== The Urly Cookbook

=== How do instantiate Urly?

Pass any url-like string to Urly:

    my_urly_instance = Urly.new['https://github.com/teejayvanslyke/earl']
    #
    # or using the []= convenience method:
    my_urly_instance = Urly['https://github.com/teejayvanslyke/earl']


=== How do I inspect details of the page?

    urly = Urly['https://github.com/teejayvanslyke/earl']
    urly.title
    =>  "teejayvanslyke/earl Â· GitHub"
    urly.description
    => "earl - URL metadata API for scraping titles, descriptions, images, and videos from URL's."
    urly.image
    => "https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1338956357"

=== How do I inspect what attributes are available for a page?

To see all of the attributes a URL provides, simply ask:

    urly = Urly['https://github.com/teejayvanslyke/earl']
    urly.attributes
    => [:title, :image, :description, :rss_feed, :atom_feed]


=== How can I extend Urly to scrape additional page details?

Need to scrape additional page details currently supported by Earl?  Implement your own scraper:

    class QotdScraper < Urly::Scraper
      match /^http\:\/\/www\.quotationspage\.com\/qotd\.html$/

      define_attribute :qotd do |doc|
        doc.at('dt.quote a').text
      end
    end

The define_attribute method will supply you with a Nokogiri document which you can traverse to your heart's content.
Use the match method to limit the scope of URLs that your scraper will apply to.

Your new attribute is now available for use:

    Urly['http://www.quotationspage.com/qotd.html'].qotd
    => "Never interrupt your enemy when he is making a mistake."


=== How do I install it for normal use?

If using bundler, add gem 'urly' your application's Gemfile and run `bundle`.

Or install it from the command-line:

    $ gem install urly

=== How do I install it for gem development?

To work on enhancements of fix bugs in Urly, fork and clone the github repository.
If you are using bundler (recommended), run <tt>bundle</tt> to install development dependencies:

    $ gem install bundler
    $ bundle

=== How do I run the tests?

Once development dependencies are installed, all unit tests are run with just:

    $ rake
    # or..
    $ rake spec

Unit tests exclude a set of integration tests that actually hit the network (therefore not 'nice' to run all the time,
and also subject to failures due to network availability or changes in the services accessed). To run integration tests:

    $ rake spec:integration

To run all tests (unit and integration):

    $ rake spec:all


=== How do I automatically run tests when I modify files?

Guard is installed as part of the development dependencies. Start a guard process in a terminal window:

    $ bundle exec guard

It will run all the tests to start with by default. Then whenever you change a file, the associated tests will execute in this terminal window.

== Contributing to Urly

* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2009 T.J. VanSlyke. See LICENSE for details.
